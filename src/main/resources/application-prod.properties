#开发环境
#server.contextPath=/jkzjk

#端口号
server.port=8082

#阿里云人脸识别AK配置
ak_id=LTAIpfMXLqPGY81V
ak_secret=Fxrwy8YeBjviLI4zivYWWsjF7oqVLR
#人脸对比API接口调用地址
verifyUrl=https://139.196.67.155/face/verify
#verifyUrl=https://dtplus-cn-shanghai.data.aliyuncs.com/face/verify
#人脸检测API接口调用地址
detectUrl=https://139.196.67.155/face/detect
#detectUrl=https://dtplus-cn-shanghai.data.aliyuncs.com/face/detect

#安全配置
#Actuator 提供的端点(Endpoints)，默认是需要安全认证才能够被访问的。因为里面涉及到一些敏感的信息。需要安全认证就需要配置 Spring-Security。为了方便首先配置不需要安全权限的
management.security.enabled=false
#启用健康监控
management.health.mail.enabled=true
#shutdown
endpoints.shutdown.enabled=true

#数据源配置 指定数据源
#spring.datasource.type=com.zaxxer.hikari.HikariDataSource
#spring.datasource.type=org.apache.tomcat.jdbc.pool.DataSource
#spring.datasource.type=org.apache.commons.dbcp.BasicDataSource
#spring.datasource.type=org.apache.commons.dbcp2.BasicDataSource
spring.datasource.type=com.alibaba.druid.pool.DruidDataSource

#spring.autoconfigure.exclude=org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration,org.springframework.boot.autoconfigure.jdbc.DataSourceTransactionManagerAutoConfiguration

#本地测试反馈Oracle数据库 - 外网
#spring.jpa.database-platform=org.hibernate.dialect.Oracle10gDialect
#spring.datasource.username=jkzjkww
#spring.datasource.password=jkzjk
#spring.datasource.url=jdbc:oracle:thin:@192.168.22.213:1521:jkzjkww
#spring.datasource.driverClassName=oracle.jdbc.OracleDriver

#数据库配置 健康证外网正式数据库
spring.jpa.database-platform=org.hibernate.dialect.Oracle10gDialect
spring.datasource.username=hzcyry
spring.datasource.password=hzcyry
spring.datasource.url=jdbc:oracle:thin:@10.255.36.20:1521:orcl
spring.datasource.driverClassName=oracle.jdbc.OracleDriver


#连接池配置 数据源配置 指定数据源
#spring.datasource.type=org.apache.commons.dbcp2.BasicDataSource
#spring.datasource.dbcp2.max-wait-millis=10000
#spring.datasource.dbcp2.min-idle=5
#spring.datasource.dbcp2.initial-size=5
#spring.datasource.dbcp2.validation-query=SELECT x
#spring.datasource.dbcp2.connection-properties=characterEncoding=utf8

#mybatis配置
#配置项：开启下划线到驼峰的自动转换. 作用：将数据库字段根据驼峰规则自动注入到对象属性。
#mybatis.configuration.map-underscore-to-camel-case=true
#mybatis.mapper-locations=classpath:/mybatis/mapper/*.xml


#日志配置
#打印SQL信息
logging.level.com.huntto.hii.dao=debug

#配制日志打印
#logging.config=classpath:logging-config.xml
# 指定日志输入级别
logging.level.org.springframework.web=INFO
logging.level.com.huntto=INFO

# 指定日志输出位置和日志文件名
logging.file=./log/jkzjk_log.txt
 
# 指定日志输出路径,若file和path同时配置,则file生效
# 此配置默认生成文件为spring.log
#logging.path=./log
# 控制台日志输出格式
# -5表示从左显示5个字符宽度
#logging.pattern.console=%d{yyyy-MM-dd HH:mm:ss.SSS} %highlight(%-5level) %boldYellow(%thread) | %boldGreen(%logger) | %msg%n
# 文件中输出的格式
logging.pattern.file=%d{yyyy-MM-dd HH:mm:ss.SSS} = [%thread] = %-5level = %logger{50} - %msg%n



